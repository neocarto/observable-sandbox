/**
 * Bundled by jsDelivr using Rollup v2.79.1 and Terser v5.19.2.
 * Original file: /npm/d3-geo-scale-bar@1.2.5/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
function t(){this.reset()}t.prototype={constructor:t,reset:function(){this.s=this.t=0},add:function(t){e(n,t,this.t),e(this,n.s,this.s),this.s?this.t+=n.t:this.s=n.t},valueOf:function(){return this.s}};const n=new t;function e(t,n,e){const r=t.s=n+e,o=r-n,i=r-o;t.t=n-i+(e-o)}function r(t,n){t&&i.hasOwnProperty(t.type)&&i[t.type](t,n)}const o={Feature:function(t,n){r(t.geometry,n)},FeatureCollection:function(t,n){let e=t.features,o=-1,i=e.length;for(;++o<i;)r(e[o].geometry,n)}},i={Sphere:function(t,n){n.sphere()},Point:function(t,n){t=t.coordinates,n.point(t[0],t[1],t[2])},MultiPoint:function(t,n){let e=t.coordinates,r=-1,o=e.length;for(;++r<o;)t=e[r],n.point(t[0],t[1],t[2])},LineString:function(t,n){a(t.coordinates,n,0)},MultiLineString:function(t,n){let e=t.coordinates,r=-1,o=e.length;for(;++r<o;)a(e[r],n,0)},Polygon:function(t,n){l(t.coordinates,n)},MultiPolygon:function(t,n){let e=t.coordinates,r=-1,o=e.length;for(;++r<o;)l(e[r],n)},GeometryCollection:function(t,n){let e=t.geometries,o=-1,i=e.length;for(;++o<i;)r(e[o],n)}};function a(t,n,e){let r,o=-1,i=t.length-e;for(n.lineStart();++o<i;)r=t[o],n.point(r[0],r[1],r[2]);n.lineEnd()}function l(t,n){let e=-1,r=t.length;for(n.polygonStart();++e<r;)a(t[e],n,1);n.polygonEnd()}let s,c,u,f=new t;const h={sphere:t=>{},point:t=>{},lineStart:function(){h.point=g,h.lineEnd=d},lineEnd:t=>{},polygonStart:t=>{},polygonEnd:t=>{}};function d(){h.point=h.lineEnd=t=>{}}function g(t,n){t*=Math.PI/180,n*=Math.PI/180,s=t,c=Math.sin(n),u=Math.cos(n),h.point=p}function p(t,n){t*=Math.PI/180,n*=Math.PI/180;const e=Math.sin(n),r=Math.cos(n),o=Math.abs(t-s),i=Math.cos(o),a=r*Math.sin(o),l=u*e-c*r*i,h=c*e+u*r*i;f.add(Math.atan2(Math.sqrt(a*a+l*l),h)),s=t,c=e,u=r}function m(t){return f.reset(),function(t,n){t&&o.hasOwnProperty(t.type)?o[t.type](t,n):r(t,n)}(t,h),+f}const y=[null,null],x={type:"LineString",coordinates:y};function M(t,n){return y[0]=t,y[1]=n,m(x)}function S(){return 1}var k={units:"kilometers",radius:6371.0088};function C(){let t,n,e,r,o,i=null,a=0,l=0,s=1,c=k.radius,u=k.units,f=t=>+t.toFixed(2),h=2,d=4,g="start",p=1,m=!0;function y(y){o=null===o?null:o||u.charAt(0).toUpperCase()+u.slice(1);let x=i[1][0]-i[0][0],S=i[1][1]-i[0][1],k=i[0][0]+x*a,C=i[0][1]+S*l,P=t.invert([k,C]),$=0,v=0;if(n)$=n,v=$/(M(P,t.invert([k+1,C]))*c);else{let n=.01,r=80/(m?1:p),o=0,i=100,a=[1,2,4,5];for(;v<r&&o<i;){for(let e=0,o=a.length;e<o&&($=n*a[e],v=$/(M(P,t.invert([k+1,C]))*c),!(v>=r));e++);n*=10,o++}e=$}let w=$/(m?p:1),b=null===r?[]:r||[0,w/4,w/2,w],z=t=>t*v/($/p),E=y.selection?y.selection():y,F=E.selectAll(".label").data([o]),L=E.selectAll(".domain").data([null]),A=E.selectAll(".tick").data(b,z).order(),I=A.exit(),O=A.enter().append("g").attr("class","tick"),j=A.select("line"),q=A.select("text"),G=A.select("rect");E.attr("font-family","sans-serif").attr("transform",`translate(${[k,C]})`),L=L.merge(L.enter().insert("path",".tick").attr("class","domain").attr("fill","none").attr("stroke","currentColor")),A=A.merge(O),j=j.merge(O.append("line").attr("stroke","currentColor").attr("y2",d*s)),q=q.merge(O.append("text").attr("fill","currentColor").attr("y",d*s+h*s).attr("font-size",10).attr("text-anchor","middle").attr("dy",(1===s?.71:0)+"em")),G=G.merge(O.append("rect").attr("fill",((t,n)=>n%2==0?"currentColor":"#fff")).attr("stroke","currentColor").attr("stroke-width",.5).attr("width",((t,n,e)=>n===e.length-1?0:z(b[n+1]-t))).attr("y",1===s?0:-d).attr("height",d)),y!==E&&(A=A.transition(y),L=L.transition(y),G=G.transition(y),I=I.transition(y).attr("opacity",1e-6).attr("transform",(t=>`translate(${z(t)})`)),O.attr("opacity",1e-6).attr("transform",(t=>`translate(${z(t)})`))),I.remove(),L.attr("d",`M${z(0)},${d*s} L${z(0)},0 L${z(w)},0 L${z(w)},${d*s}`),A.attr("transform",(t=>`translate(${z(t)})`)).attr("opacity",1),j.attr("y2",d*s),q.attr("y",d*s+h*s).text(f),G.attr("fill",((t,n)=>n%2==0?"currentColor":"#fff")).attr("width",((t,n,e)=>n===e.length-1?0:z(b[n+1]-t))).attr("y",1===s?0:-d).attr("height",d),null===F?F.remove():(y!==E?F.transition(y).attr("x","start"===g?0:z("middle"===g?w/2:w)).attr("y",1===s?0:"1.3em").attr("text-anchor",g).text((t=>t)):F.attr("x","start"===g?0:z("middle"===g?w/2:w)).attr("y",1===s?0:"1.3em").attr("text-anchor",g).text((t=>t)),F.enter().append("text").attr("class","label").attr("fill","currentColor").attr("font-size",12).attr("dy","-0.32em").attr("x","start"===g?0:z("middle"===g?w/2:w)).attr("y",1===s?0:"1.3em").attr("text-anchor",g).text((t=>t)))}return y.distance=function(t){return arguments.length?(n=+t,y):n||e},y.extent=function(t){return arguments.length?(i=t,y):i},y.label=function(t){return arguments.length?(o=t,y):o},y.labelAnchor=function(t){return arguments.length?(g=t,y):g},y.left=function(t){return arguments.length?(a=+t>1?1:+t<0?0:+t,y):a},y.orient=function(t){return arguments.length?(s=t(),y):1===s?"bottom":"top"},y.projection=function(n){return arguments.length?(t=n,y):t},y.radius=function(t){return arguments.length?(c=+t,y):c},y.size=function(t){return arguments.length?(i=[[0,0],t],y):i[1]},y.top=function(t){return arguments.length?(l=+t>1?1:+t<0?0:+t,y):l},y.tickFormat=function(t){return arguments.length?(f=t,y):f},y.tickPadding=function(t){return arguments.length?(h=+t,y):h},y.tickSize=function(t){return arguments.length?(d=+t,y):d},y.tickValues=function(t){return arguments.length?(r=t,y):r},y.units=function(t){return arguments.length?(({units:u,radius:c}=t),y):u},y.zoomClamp=function(t){return arguments.length?(m=!!t,y):m},y.zoomFactor=function(t){return arguments.length?(p=+t,y):p},y}function P(){return-1}var $={units:"feet",radius:20902259.664},v={units:"meters",radius:6371008.8},w={units:"miles",radius:3958.7613};export{C as geoScaleBar,S as geoScaleBottom,$ as geoScaleFeet,k as geoScaleKilometers,v as geoScaleMeters,w as geoScaleMiles,P as geoScaleTop};export default null;
