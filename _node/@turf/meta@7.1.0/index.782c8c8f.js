import{feature as E,lineString as b,isObject as x,point as M}from"../helpers@7.1.0/index.b5d500cb.js";function k(n,i,r){if(n!==null)for(var e,o,t,a,l,u,s,g=0,c=0,h,d=n.type,f=d==="FeatureCollection",v=d==="Feature",S=f?n.features.length:1,m=0;m<S;m++){s=f?n.features[m].geometry:v?n.geometry:n,h=s?s.type==="GeometryCollection":!1,l=h?s.geometries.length:1;for(var L=0;L<l;L++){var y=0,P=0;if(a=h?s.geometries[L]:s,a!==null){u=a.coordinates;var p=a.type;switch(g=r&&(p==="Polygon"||p==="MultiPolygon")?1:0,p){case null:break;case"Point":if(i(u,c,m,y,P)===!1)return!1;c++,y++;break;case"LineString":case"MultiPoint":for(e=0;e<u.length;e++){if(i(u[e],c,m,y,P)===!1)return!1;c++,p==="MultiPoint"&&y++}p==="LineString"&&y++;break;case"Polygon":case"MultiLineString":for(e=0;e<u.length;e++){for(o=0;o<u[e].length-g;o++){if(i(u[e][o],c,m,y,P)===!1)return!1;c++}p==="MultiLineString"&&y++,p==="Polygon"&&P++}p==="Polygon"&&y++;break;case"MultiPolygon":for(e=0;e<u.length;e++){for(P=0,o=0;o<u[e].length;o++){for(t=0;t<u[e][o].length-g;t++){if(i(u[e][o][t],c,m,y,P)===!1)return!1;c++}P++}y++}break;case"GeometryCollection":for(e=0;e<a.geometries.length;e++)if(k(a.geometries[e],i,r)===!1)return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function G(n,i,r,e){var o=r;return k(n,function(t,a,l,u,s){a===0&&r===void 0?o=t:o=i(o,t,a,l,u,s)},e),o}function C(n,i){var r;switch(n.type){case"FeatureCollection":for(r=0;r<n.features.length&&i(n.features[r].properties,r)!==!1;r++);break;case"Feature":i(n.properties,0);break}}function U(n,i,r){var e=r;return C(n,function(o,t){t===0&&r===void 0?e=o:e=i(e,o,t)}),e}function I(n,i){if(n.type==="Feature")i(n,0);else if(n.type==="FeatureCollection")for(var r=0;r<n.features.length&&i(n.features[r],r)!==!1;r++);}function q(n,i,r){var e=r;return I(n,function(o,t){t===0&&r===void 0?e=o:e=i(e,o,t)}),e}function A(n){var i=[];return k(n,function(r){i.push(r)}),i}function F(n,i){var r,e,o,t,a,l,u,s,g,c,h=0,d=n.type==="FeatureCollection",f=n.type==="Feature",v=d?n.features.length:1;for(r=0;r<v;r++){for(l=d?n.features[r].geometry:f?n.geometry:n,s=d?n.features[r].properties:f?n.properties:{},g=d?n.features[r].bbox:f?n.bbox:void 0,c=d?n.features[r].id:f?n.id:void 0,u=l?l.type==="GeometryCollection":!1,a=u?l.geometries.length:1,o=0;o<a;o++){if(t=u?l.geometries[o]:l,t===null){if(i(null,h,s,g,c)===!1)return!1;continue}switch(t.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":{if(i(t,h,s,g,c)===!1)return!1;break}case"GeometryCollection":{for(e=0;e<t.geometries.length;e++)if(i(t.geometries[e],h,s,g,c)===!1)return!1;break}default:throw new Error("Unknown Geometry Type")}}h++}}function O(n,i,r){var e=r;return F(n,function(o,t,a,l,u){t===0&&r===void 0?e=o:e=i(e,o,t,a,l,u)}),e}function w(n,i){F(n,function(r,e,o,t,a){var l=r===null?null:r.type;switch(l){case null:case"Point":case"LineString":case"Polygon":return i(E(r,o,{bbox:t,id:a}),e,0)===!1?!1:void 0}var u;switch(l){case"MultiPoint":u="Point";break;case"MultiLineString":u="LineString";break;case"MultiPolygon":u="Polygon";break}for(var s=0;s<r.coordinates.length;s++){var g=r.coordinates[s],c={type:u,coordinates:g};if(i(E(c,o),e,s)===!1)return!1}})}function T(n,i,r){var e=r;return w(n,function(o,t,a){t===0&&a===0&&r===void 0?e=o:e=i(e,o,t,a)}),e}function R(n,i){w(n,function(r,e,o){var t=0;if(r.geometry){var a=r.geometry.type;if(!(a==="Point"||a==="MultiPoint")){var l,u=0,s=0,g=0;if(k(r,function(c,h,d,f,v){if(l===void 0||e>u||f>s||v>g){l=c,u=e,s=f,g=v,t=0;return}var S=b([l,c],r.properties);if(i(S,e,o,v,t)===!1)return!1;t++,l=c})===!1)return!1}}})}function z(n,i,r){var e=r,o=!1;return R(n,function(t,a,l,u,s){o===!1&&r===void 0?e=t:e=i(e,t,a,l,u,s),o=!0}),e}function j(n,i){if(!n)throw new Error("geojson is required");w(n,function(r,e,o){if(r.geometry!==null){var t=r.geometry.type,a=r.geometry.coordinates;switch(t){case"LineString":if(i(r,e,o,0,0)===!1)return!1;break;case"Polygon":for(var l=0;l<a.length;l++)if(i(b(a[l],r.properties),e,o,l)===!1)return!1;break}}})}function B(n,i,r){var e=r;return j(n,function(o,t,a,l){t===0&&r===void 0?e=o:e=i(e,o,t,a,l)}),e}function D(n,i){if(i=i||{},!x(i))throw new Error("options is invalid");var r=i.featureIndex||0,e=i.multiFeatureIndex||0,o=i.geometryIndex||0,t=i.segmentIndex||0,a=i.properties,l;switch(n.type){case"FeatureCollection":r<0&&(r=n.features.length+r),a=a||n.features[r].properties,l=n.features[r].geometry;break;case"Feature":a=a||n.properties,l=n.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":l=n;break;default:throw new Error("geojson is invalid")}if(l===null)return null;var u=l.coordinates;switch(l.type){case"Point":case"MultiPoint":return null;case"LineString":return t<0&&(t=u.length+t-1),b([u[t],u[t+1]],a,i);case"Polygon":return o<0&&(o=u.length+o),t<0&&(t=u[o].length+t-1),b([u[o][t],u[o][t+1]],a,i);case"MultiLineString":return e<0&&(e=u.length+e),t<0&&(t=u[e].length+t-1),b([u[e][t],u[e][t+1]],a,i);case"MultiPolygon":return e<0&&(e=u.length+e),o<0&&(o=u[e].length+o),t<0&&(t=u[e][o].length-t-1),b([u[e][o][t],u[e][o][t+1]],a,i)}throw new Error("geojson is invalid")}function H(n,i){if(i=i||{},!x(i))throw new Error("options is invalid");var r=i.featureIndex||0,e=i.multiFeatureIndex||0,o=i.geometryIndex||0,t=i.coordIndex||0,a=i.properties,l;switch(n.type){case"FeatureCollection":r<0&&(r=n.features.length+r),a=a||n.features[r].properties,l=n.features[r].geometry;break;case"Feature":a=a||n.properties,l=n.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":l=n;break;default:throw new Error("geojson is invalid")}if(l===null)return null;var u=l.coordinates;switch(l.type){case"Point":return M(u,a,i);case"MultiPoint":return e<0&&(e=u.length+e),M(u[e],a,i);case"LineString":return t<0&&(t=u.length+t),M(u[t],a,i);case"Polygon":return o<0&&(o=u.length+o),t<0&&(t=u[o].length+t),M(u[o][t],a,i);case"MultiLineString":return e<0&&(e=u.length+e),t<0&&(t=u[e].length+t),M(u[e][t],a,i);case"MultiPolygon":return e<0&&(e=u.length+e),o<0&&(o=u[e].length+o),t<0&&(t=u[e][o].length-t),M(u[e][o][t],a,i)}throw new Error("geojson is invalid")}export{A as coordAll,k as coordEach,G as coordReduce,I as featureEach,q as featureReduce,H as findPoint,D as findSegment,w as flattenEach,T as flattenReduce,F as geomEach,O as geomReduce,j as lineEach,B as lineReduce,C as propEach,U as propReduce,R as segmentEach,z as segmentReduce};
